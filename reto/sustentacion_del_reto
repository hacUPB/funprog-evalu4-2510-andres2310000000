# Sustentaci칩n T칠cnica - Reto Unidad 4

## An치lisis del problema

El problema plantea el desarrollo de una aplicaci칩n en lenguaje C orientada al procesamiento de archivos de texto. Este programa debe permitir al usuario interactuar a trav칠s de un men칰 para realizar diversas operaciones sobre un archivo .txt, tales como analizar estad칤sticas del texto, contar vocales, reemplazar palabras y guardar los resultados.

### Decisiones clave tomadas
Lectura din치mica del archivo
Se uso malloc y realloc para construir din치micamente un arreglo de caracteres que almacene el contenido completo del archivo. Esto permite leer archivos de cualquier tama침o sin desperdiciar memoria.

### Interfaz por men칰 interactivo
La aplicaci칩n se estructura en torno a un ciclo do-while con opciones numeradas, guiando al usuario paso a paso seg칰n la funcionalidad requerida. Esta estructura evita errores y permite validar entradas (como asegurarse de que el archivo fue cargado antes de continuar).

### Manejo de estad칤sticas textuales
Las m칠tricas solicitadas (caracteres, palabras, l칤neas, espacios) se calcularon usando un recorrido completo del arreglo de texto, implementando un aut칩mata b치sico que distingue palabras por espacios y nuevas l칤neas por \n.

### Conteo de vocales
Se normaliz칩 la comparaci칩n de caracteres con ayuda de funciones de la biblioteca <ctype.h>, como tolower, para asegurar que vocales en may칰sculas y min칰sculas sean tratadas por igual.

### Reemplazo de palabras
Para esta funcionalidad, analizamos cu치ntas veces aparece la palabra original para calcular el tama침o necesario del nuevo texto y usamos memoria din치mica para construir el resultado sin sobrescribir el texto original.

### Salida a archivo externo
Se implement칩 una opci칩n final que permite exportar el texto modificado junto con las estad칤sticas y el conteo de vocales a un archivo .txt, usando fprintf y estructura clara del reporte.
### Forma simplificada
* Leer el contenido de un archivo de texto (1).
* Calcular estad칤sticas como n칰mero de caracteres, palabras, l칤neas y espacios (2).
* Contar la cantidad de veces aparece cada vocal (3).
* Reemplazar palabras espec칤ficas por otras (4).
* Guardar los resultados obtenidos en un archivo nuevo (5).

La estrategia consisti칩 en dividir cada funcionalidad en una funci칩n espec칤fica para mantener la modularidad, facilitar pruebas y aumentar la claridad del c칩digo. Esta divisi칩n tambi칠n nos ayud칩 a reutilizar c칩digo y reducir errores.

---


## Estrategia de soluci칩n

El programa est치 dividido en funciones que se conectan a trav칠s de un men칰 principal:

* `leer_archivo`: Lee el archivo completo y almacena su contenido en memoria din치mica.
* `calcular_estadisticas`: Cuenta los caracteres, palabras, l칤neas y espacios.
* `contar_vocales`: Cuenta la cantidad de vocales en el texto.
* `reemplazar_palabra`: Reemplaza una palabra que el usuario de por otra en todo el texto.
* `guardar_resultados`: Guarda en un archivo de salida el texto todos los cambios hechos.

Adicional a esto cada opci칩n del men칰 verifica en las funciones primero si el contenido que se cargo si tenga algo en el archivo, para asegurar el buen funcionamiento de las operaciones en las funciones. Tambi칠n se implement칩 manejo de errores (como punteros nulos o fallos de asignaci칩n de memoria) para reducir errores.

---

##  Tabla de variables

### Funci칩n: `leer_archivo`

| Variable        | Tipo         | Rol                |
| --------------- | ------------ | ------------------ |
| nombre\_archivo | const char\* | Entrada            |
| contenido       | char\*       | Salida             |
| buffer          | char\[]      | Temporal           |
| capacidad       | size\_t      | Control de memoria |
| longitud        | size\_t      | Control de memoria |

---

### Funci칩n: `calcular_estadisticas`

| Variable    | Tipo         | Rol                              |
| ----------- | ------------ | -------------------------------- |
| contenido   | const char\* | Entrada                          |
| resultado   | char\*       | Salida                           |
| caracteres  | int          | Contador                         |
| palabras    | int          | Contador                         |
| espacios    | int          | Contador                         |
| lineas      | int          | Contador                         |
| en\_palabra | int          | L칩gica de separaci칩n de palabras |

---

### Funci칩n: `contar_vocales`

| Variable      | Tipo         | Rol                               |
| ------------- | ------------ | --------------------------------- |
| contenido     | const char\* | Entrada                           |
| resultado     | char\*       | Salida                            |
| a, e, i, o, u | int          | Contadores individuales por vocal |

---

### Funci칩n: `reemplazar_palabra`

| Variable        | Tipo         | Rol                              |
| --------------- | ------------ | -------------------------------- |
| origen          | const char\* | Entrada                          |
| palabraOriginal | const char\* | Entrada                          |
| nuevaPalabra    | const char\* | Entrada                          |
| resultado       | char\*       | Salida                           |
| temp, ptrOrigen | const char\* | Control de b칰squeda              |
| ptrResultado    | char\*       | Posicionamiento en resultado     |
| ocurrencias     | int          | Contador de ocurrencias          |
| tamanoTexto     | int          | Tama침o del texto original        |
| tamanoOriginal  | int          | Tama침o de la palabra original    |
| tamanoNueva     | int          | Tama침o de la nueva palabra       |
| nuevoTamano     | int          | Tama침o calculado del nuevo texto |

---

### Funci칩n: `guardar_resultados`

| Variable        | Tipo         | Rol               |
| --------------- | ------------ | ----------------- |
| archivo\_salida | const char\* | Entrada           |
| contenido       | const char\* | Entrada           |
| estadisticas    | const char\* | Entrada           |
| vocales         | const char\* | Entrada           |
| out             | FILE\*       | Archivo de salida |

---

## 游늷 Pseudoc칩digo general del men칰 principal

```plaintext
Mientras el usuario no elija "Salir":
    Mostrar men칰
    Leer opci칩n del usuario

    Si opci칩n = 1:
        Pedir nombre del archivo
        Llamar a leer_archivo()
    Si opci칩n = 2:
        Veficar contenido
        Llamar a calcular_estadisticas()
    Si opci칩n = 3:
        Verificar contenido
        Llamar a contar_vocales()
    Si opci칩n = 4:
        Verificar contenido
        Pedir palabras a buscar y reemplazar
        Llamar a reemplazar_palabra()
    Si opci칩n = 5:
        Verificar contenido
        Pedir nombre del archivo de salida
        Llamar a guardar_resultados()
```
